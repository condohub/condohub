#
# Github Workflow config file
#
# - reference: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
# - composite actions: https://docs.github.com/en/actions/creating-actions/creating-a-composite-action
#

name: core-figma-extractor

on:
  push:
    paths:
      - '.github/actions/**/*'
      - '.github/workflows/core-figma-extractor-workflow.yml'
      - '**/package.json'
      - '**/package-lock.json'
      - '**/yarn.lock'
      - 'packages/core-figma-extractor/**/*'
      - 'packages/core-common/**/*'
      - 'packages/core-jest-config/**/*'
      - 'packages/core-types/**/*'
      - 'packages/core-node-utils/**/*'
    branches:
      - dev
      - master
      - release
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:

env:
  #
  # Debugging
  #
  DEBUG: 'nr*'
  #
  # Node
  #
  NODE_OPTIONS: '--max-old-space-size=4096'
  #
  # Figma (core-figma-extractor test project)
  #
  FIGMA_TOKEN: ${{ secrets.FIGMA_TEST_TOKEN }}
  FIGMA_FILE: ${{ secrets.FIGMA_TEST_FILE }}

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    # If the PR is coming from a fork (pull_request_target), ensure it's opened by "dependabot[bot]".
    # Otherwise, clone it normally.
    if: |
      (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]') ||
      (github.event_name != 'pull_request_target' && github.actor != 'dependabot[bot]')

    steps:
      - name: Checkout
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: actions/checkout@v2
        with:
          clean: false

      - name: Checkout PR
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          clean: false

      - name: 'Checkout, Setup NodeJS + yarn and install dependencies'
        uses: ./.github/actions/base-node-setup

      - name: Verify dependencies
        run: yarn lerna:depcheck --scope @newrade/core-figma-extractor

      - name: Lint (ls-lint) source files
        run: yarn lerna:ls-lint --scope @newrade/core-figma-extractor

      - name: Lint source files
        run: yarn eslint ./packages/core-figma-extractor/src/ --ext "ts,tsx"

      - name: Run unit tests
        run: yarn lerna:test --scope @newrade/core-figma-extractor

      - name: Build package
        run: yarn lerna:build --scope @newrade/core-figma-extractor
