{"version":3,"sources":["../../src/commands/depcheck.ts"],"sourcesContent":["import { spawnSync } from 'child_process';\n\nimport { Command } from '@oclif/core';\n\nimport { getShellForPlatform } from '@condohub/node-utils';\n\nimport { debugInstance, enableDebug, NS } from '../utilities/log.utilities';\n\nexport default class Depcheck extends Command {\n  log = debugInstance(`${NS}:depcheck`);\n  logWarn = debugInstance(`${NS}:depcheck:warn`);\n  logError = debugInstance(`${NS}:depcheck:error`);\n\n  static description = 'Shortcut to run depcheck';\n\n  static examples = [`$ nr depcheck`];\n\n  static args = [{ name: 'args' }];\n\n  async run() {\n    enableDebug();\n\n    const { args } = await this.parse(Depcheck);\n\n    this.log(`running in ${process.cwd()}`);\n\n    const command = spawnSync(`npm exec depcheck ${args.args || ''}`, {\n      shell: getShellForPlatform(),\n      stdio: ['inherit', 'pipe', 'pipe'],\n      env: process.env,\n    });\n\n    if (command.stdout.toString().length) {\n      if (/Missing/gi.test(command.stdout.toString())) {\n        this.error(command.stdout.toString());\n      }\n\n      if (/Unused/gi.test(command.stdout.toString())) {\n        this.logWarn(command.stdout.toString());\n        return;\n      }\n\n      this.log(command.stdout.toString());\n    }\n\n    if (command.stderr.toString().length) {\n      if (/DeprecationWarning/gi.test(command.stderr.toString())) {\n        return;\n      }\n      this.logError(command.stderr.toString());\n      this.error(command.stderr.toString());\n    }\n  }\n}\n"],"names":["Depcheck","Command","log","debugInstance","NS","logWarn","logError","description","examples","args","name","run","enableDebug","parse","process","cwd","command","spawnSync","shell","getShellForPlatform","stdio","env","stdout","toString","length","test","error","stderr"],"mappings":"AAAA;;;;;AAA0B,IAAA,aAAe,WAAf,eAAe,CAAA;AAEjB,IAAA,KAAa,WAAb,aAAa,CAAA;AAED,IAAA,UAAsB,WAAtB,sBAAsB,CAAA;AAEX,IAAA,aAA4B,WAA5B,4BAA4B,CAAA;AAE5D,MAAMA,QAAQ,SAASC,KAAO,QAAA;IAC3CC,GAAG,GAAGC,CAAAA,GAAAA,aAAa,AAAkB,CAAA,cAAlB,CAAC,CAAC,EAAEC,aAAE,GAAA,CAAC,SAAS,CAAC,CAAC,CAAC;IACtCC,OAAO,GAAGF,CAAAA,GAAAA,aAAa,AAAuB,CAAA,cAAvB,CAAC,CAAC,EAAEC,aAAE,GAAA,CAAC,cAAc,CAAC,CAAC,CAAC;IAC/CE,QAAQ,GAAGH,CAAAA,GAAAA,aAAa,AAAwB,CAAA,cAAxB,CAAC,CAAC,EAAEC,aAAE,GAAA,CAAC,eAAe,CAAC,CAAC,CAAC;IAEjD,OAAOG,WAAW,GAAG,0BAA0B,CAAC;IAEhD,OAAOC,QAAQ,GAAG;QAAC,CAAC,aAAa,CAAC;KAAC,CAAC;IAEpC,OAAOC,IAAI,GAAG;QAAC;YAAEC,IAAI,EAAE,MAAM;SAAE;KAAC,CAAC;IAEjC,MAAMC,GAAG,GAAG;QACVC,CAAAA,GAAAA,aAAW,AAAE,CAAA,YAAF,EAAE,CAAC;QAEd,MAAM,EAAEH,IAAI,CAAA,EAAE,GAAG,MAAM,IAAI,CAACI,KAAK,CAACb,QAAQ,CAAC,AAAC;QAE5C,IAAI,CAACE,GAAG,CAAC,CAAC,WAAW,EAAEY,OAAO,CAACC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QAExC,MAAMC,OAAO,GAAGC,CAAAA,GAAAA,aAAS,AAIvB,CAAA,UAJuB,CAAC,CAAC,kBAAkB,EAAER,IAAI,CAACA,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE;YAChES,KAAK,EAAEC,CAAAA,GAAAA,UAAmB,AAAE,CAAA,oBAAF,EAAE;YAC5BC,KAAK,EAAE;gBAAC,SAAS;gBAAE,MAAM;gBAAE,MAAM;aAAC;YAClCC,GAAG,EAAEP,OAAO,CAACO,GAAG;SACjB,CAAC,AAAC;QAEH,IAAIL,OAAO,CAACM,MAAM,CAACC,QAAQ,EAAE,CAACC,MAAM,EAAE;YACpC,IAAI,YAAYC,IAAI,CAACT,OAAO,CAACM,MAAM,CAACC,QAAQ,EAAE,CAAC,EAAE;gBAC/C,IAAI,CAACG,KAAK,CAACV,OAAO,CAACM,MAAM,CAACC,QAAQ,EAAE,CAAC,CAAC;aACvC;YAED,IAAI,WAAWE,IAAI,CAACT,OAAO,CAACM,MAAM,CAACC,QAAQ,EAAE,CAAC,EAAE;gBAC9C,IAAI,CAAClB,OAAO,CAACW,OAAO,CAACM,MAAM,CAACC,QAAQ,EAAE,CAAC,CAAC;gBACxC,OAAO;aACR;YAED,IAAI,CAACrB,GAAG,CAACc,OAAO,CAACM,MAAM,CAACC,QAAQ,EAAE,CAAC,CAAC;SACrC;QAED,IAAIP,OAAO,CAACW,MAAM,CAACJ,QAAQ,EAAE,CAACC,MAAM,EAAE;YACpC,IAAI,uBAAuBC,IAAI,CAACT,OAAO,CAACW,MAAM,CAACJ,QAAQ,EAAE,CAAC,EAAE;gBAC1D,OAAO;aACR;YACD,IAAI,CAACjB,QAAQ,CAACU,OAAO,CAACW,MAAM,CAACJ,QAAQ,EAAE,CAAC,CAAC;YACzC,IAAI,CAACG,KAAK,CAACV,OAAO,CAACW,MAAM,CAACJ,QAAQ,EAAE,CAAC,CAAC;SACvC;KACF;CACF;kBA7CoBvB,QAAQ"}