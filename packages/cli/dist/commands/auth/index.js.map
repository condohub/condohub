{"version":3,"sources":["../../../src/commands/auth/index.ts"],"sourcesContent":["import { resolve } from 'path';\n\nimport { Command } from '@oclif/core';\n// @ts-ignore\nimport { Listr } from 'listr2';\n\nimport { debugInstance, enableDebug, NS } from '../../utilities/log.utilities';\n\ninterface Ctx {\n  /* some variables for internal use */\n}\n\nexport default class Auth extends Command {\n  log = debugInstance(`${NS}:auth`);\n  logWarn = debugInstance(`${NS}:auth:warn`);\n  logError = debugInstance(`${NS}:auth:error`);\n\n  static description = 'Auth command';\n\n  static examples = [`$ condohub  auth`];\n\n  static args = [{ name: 'test' }];\n\n  async init() {\n    let [id, ...argv] = this.argv;\n  }\n\n  async run() {\n    const { args } = await this.parse(Auth);\n\n    const tasks = new Listr<Ctx>(\n      [\n        {\n          title: '  This task will execute.',\n          task: (ctx, task): Listr =>\n            task.newListr([\n              {\n                title: '  This is a subtask.',\n                task: async (): Promise<string> => {\n                  return new Promise((resolve, reject) => {\n                    setTimeout(() => {\n                      resolve('Done');\n                    }, 3000);\n                  });\n                },\n              },\n            ]),\n        },\n      ],\n      {\n        rendererOptions: {\n          showTimer: true,\n          indentation: 2,\n        },\n        /* options */\n      }\n    );\n    try {\n      await tasks.run();\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n"],"names":["Auth","Command","log","debugInstance","NS","logWarn","logError","description","examples","args","name","init","id","argv","run","parse","tasks","Listr","title","task","ctx","newListr","Promise","resolve","reject","setTimeout","rendererOptions","showTimer","indentation","e","console","error"],"mappings":"AAAA;;;;;AAEwB,IAAA,KAAa,WAAb,aAAa,CAAA;AAEf,IAAA,OAAQ,WAAR,QAAQ,CAAA;AAEiB,IAAA,aAA+B,WAA/B,+BAA+B,CAAA;AAM/D,MAAMA,IAAI,SAASC,KAAO,QAAA;IACvCC,GAAG,GAAGC,CAAAA,GAAAA,aAAa,AAAc,CAAA,cAAd,CAAC,CAAC,EAAEC,aAAE,GAAA,CAAC,KAAK,CAAC,CAAC,CAAC;IAClCC,OAAO,GAAGF,CAAAA,GAAAA,aAAa,AAAmB,CAAA,cAAnB,CAAC,CAAC,EAAEC,aAAE,GAAA,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3CE,QAAQ,GAAGH,CAAAA,GAAAA,aAAa,AAAoB,CAAA,cAApB,CAAC,CAAC,EAAEC,aAAE,GAAA,CAAC,WAAW,CAAC,CAAC,CAAC;IAE7C,OAAOG,WAAW,GAAG,cAAc,CAAC;IAEpC,OAAOC,QAAQ,GAAG;QAAC,CAAC,gBAAgB,CAAC;KAAC,CAAC;IAEvC,OAAOC,IAAI,GAAG;QAAC;YAAEC,IAAI,EAAE,MAAM;SAAE;KAAC,CAAC;IAEjC,MAAMC,IAAI,GAAG;QACX,IAAI,CAACC,EAAE,EAAE,GAAGC,IAAI,CAAC,GAAG,IAAI,CAACA,IAAI,AAAC;KAC/B;IAED,MAAMC,GAAG,GAAG;QACV,MAAM,EAAEL,IAAI,CAAA,EAAE,GAAG,MAAM,IAAI,CAACM,KAAK,CAACf,IAAI,CAAC,AAAC;QAExC,MAAMgB,KAAK,GAAG,IAAIC,OAAK,MAAA,CACrB;YACE;gBACEC,KAAK,EAAE,2BAA2B;gBAClCC,IAAI,EAAE,CAACC,GAAG,EAAED,IAAI,GACdA,IAAI,CAACE,QAAQ,CAAC;wBACZ;4BACEH,KAAK,EAAE,sBAAsB;4BAC7BC,IAAI,EAAE,UAA6B;gCACjC,OAAO,IAAIG,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,GAAK;oCACtCC,UAAU,CAAC,IAAM;wCACfF,OAAO,CAAC,MAAM,CAAC,CAAC;qCACjB,EAAE,IAAI,CAAC,CAAC;iCACV,CAAC,CAAC;6BACJ;yBACF;qBACF,CAAC;aACL;SACF,EACD;YACEG,eAAe,EAAE;gBACfC,SAAS,EAAE,IAAI;gBACfC,WAAW,EAAE,CAAC;aACf;SAEF,CACF,AAAC;QACF,IAAI;YACF,MAAMZ,KAAK,CAACF,GAAG,EAAE,CAAC;SACnB,CAAC,OAAOe,CAAC,EAAE;YACVC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC,CAAC;SAClB;KACF;CACF;kBAnDoB7B,IAAI"}