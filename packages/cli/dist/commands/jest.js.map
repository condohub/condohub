{"version":3,"sources":["../../src/commands/jest.ts"],"sourcesContent":["import { spawnSync } from 'child_process';\n\nimport { Command, Flags } from '@oclif/core';\n\nimport { getShellForPlatform } from '@condohub/node-utils';\n\nimport { debugInstance, enableDebug, NS } from '../utilities/log.utilities.js';\n\nexport default class Jest extends Command {\n  log = debugInstance(`${NS}:jest`);\n  logWarn = debugInstance(`${NS}:jest:warn`);\n  logError = debugInstance(`${NS}:jest:error`);\n\n  static description = 'Shortcut to run jest with typescript (ts-node)';\n\n  static examples = [`$ nr jest`];\n\n  static args = [{ name: 'args' }];\n\n  static flags = {\n    config: Flags.string({ description: 'path to jest config file', default: 'jest.config.ts' }),\n  };\n\n  async run() {\n    enableDebug();\n\n    const { args, flags } = await this.parse(Jest);\n\n    const command = [\n      `cross-env TS_NODE_PROJECT=../../tsconfig.node-cli.json node --loader ts-node/esm ../../node_modules/jest/bin/jest`,\n      `${flags.config ? '--config ' + flags.config : ''}`,\n      `${args.args || ''}`,\n    ].join(' ');\n\n    this.log(`running: ${command}`);\n\n    const cmd = spawnSync(command, {\n      shell: getShellForPlatform(),\n      stdio: ['inherit', 'inherit', 'pipe'], // jest only uses stderr as output https://github.com/facebook/jest/issues/5064\n      env: process.env,\n    });\n\n    if (cmd.stderr && cmd.stderr.toString().length) {\n      const stderr = cmd.stderr.toString();\n      if (/FAIL/gi.test(stderr)) {\n        this.logError(`${stderr}`);\n        throw new Error(stderr);\n      }\n      this.log(`${stderr}`);\n    }\n  }\n}\n"],"names":["Jest","Command","log","debugInstance","NS","logWarn","logError","description","examples","args","name","flags","config","Flags","string","default","run","enableDebug","parse","command","join","cmd","spawnSync","shell","getShellForPlatform","stdio","env","process","stderr","toString","length","test","Error"],"mappings":"AAAA;;;;;AAA0B,IAAA,aAAe,WAAf,eAAe,CAAA;AAEV,IAAA,KAAa,WAAb,aAAa,CAAA;AAER,IAAA,UAAsB,WAAtB,sBAAsB,CAAA;AAEX,IAAA,eAA+B,WAA/B,+BAA+B,CAAA;AAE/D,MAAMA,IAAI,SAASC,KAAO,QAAA;IACvCC,GAAG,GAAGC,CAAAA,GAAAA,eAAa,AAAc,CAAA,cAAd,CAAC,CAAC,EAAEC,eAAE,GAAA,CAAC,KAAK,CAAC,CAAC,CAAC;IAClCC,OAAO,GAAGF,CAAAA,GAAAA,eAAa,AAAmB,CAAA,cAAnB,CAAC,CAAC,EAAEC,eAAE,GAAA,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3CE,QAAQ,GAAGH,CAAAA,GAAAA,eAAa,AAAoB,CAAA,cAApB,CAAC,CAAC,EAAEC,eAAE,GAAA,CAAC,WAAW,CAAC,CAAC,CAAC;IAE7C,OAAOG,WAAW,GAAG,gDAAgD,CAAC;IAEtE,OAAOC,QAAQ,GAAG;QAAC,CAAC,SAAS,CAAC;KAAC,CAAC;IAEhC,OAAOC,IAAI,GAAG;QAAC;YAAEC,IAAI,EAAE,MAAM;SAAE;KAAC,CAAC;IAEjC,OAAOC,KAAK,GAAG;QACbC,MAAM,EAAEC,KAAK,MAAA,CAACC,MAAM,CAAC;YAAEP,WAAW,EAAE,0BAA0B;YAAEQ,OAAO,EAAE,gBAAgB;SAAE,CAAC;KAC7F,CAAC;IAEF,MAAMC,GAAG,GAAG;QACVC,CAAAA,GAAAA,eAAW,AAAE,CAAA,YAAF,EAAE,CAAC;QAEd,MAAM,EAAER,IAAI,CAAA,EAAEE,KAAK,CAAA,EAAE,GAAG,MAAM,IAAI,CAACO,KAAK,CAAClB,IAAI,CAAC,AAAC;QAE/C,MAAMmB,OAAO,GAAG;YACd,CAAC,iHAAiH,CAAC;YACnH,CAAC,EAAER,KAAK,CAACC,MAAM,GAAG,WAAW,GAAGD,KAAK,CAACC,MAAM,GAAG,EAAE,CAAC,CAAC;YACnD,CAAC,EAAEH,IAAI,CAACA,IAAI,IAAI,EAAE,CAAC,CAAC;SACrB,CAACW,IAAI,CAAC,GAAG,CAAC,AAAC;QAEZ,IAAI,CAAClB,GAAG,CAAC,CAAC,SAAS,EAAEiB,OAAO,CAAC,CAAC,CAAC,CAAC;QAEhC,MAAME,GAAG,GAAGC,CAAAA,GAAAA,aAAS,AAInB,CAAA,UAJmB,CAACH,OAAO,EAAE;YAC7BI,KAAK,EAAEC,CAAAA,GAAAA,UAAmB,AAAE,CAAA,oBAAF,EAAE;YAC5BC,KAAK,EAAE;gBAAC,SAAS;gBAAE,SAAS;gBAAE,MAAM;aAAC;YACrCC,GAAG,EAAEC,OAAO,CAACD,GAAG;SACjB,CAAC,AAAC;QAEH,IAAIL,GAAG,CAACO,MAAM,IAAIP,GAAG,CAACO,MAAM,CAACC,QAAQ,EAAE,CAACC,MAAM,EAAE;YAC9C,MAAMF,MAAM,GAAGP,GAAG,CAACO,MAAM,CAACC,QAAQ,EAAE,AAAC;YACrC,IAAI,SAASE,IAAI,CAACH,MAAM,CAAC,EAAE;gBACzB,IAAI,CAACtB,QAAQ,CAAC,CAAC,EAAEsB,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC3B,MAAM,IAAII,KAAK,CAACJ,MAAM,CAAC,CAAC;aACzB;YACD,IAAI,CAAC1B,GAAG,CAAC,CAAC,EAAE0B,MAAM,CAAC,CAAC,CAAC,CAAC;SACvB;KACF;CACF;kBA3CoB5B,IAAI"}