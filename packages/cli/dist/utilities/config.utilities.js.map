{"version":3,"sources":["../../src/utilities/config.utilities.ts"],"sourcesContent":["import { Config } from '@oclif/core';\nimport fs from 'node:fs';\nimport fsp from 'node:fs/promises';\nimport path from 'node:path';\n\nimport { AppError, ERROR_TYPE } from '@condohub/common-utils';\n\nimport { defaultUserConfig } from '../constants/default-user-config.constant';\nimport { UserConfig } from '../models/user-config.model';\n\nexport function getUserConfigExists(config: Config): boolean {\n  let userConfigExists = false;\n  try {\n    userConfigExists = fs.existsSync(path.join(config.configDir, 'config.json'));\n  } catch (error) {\n    throw new AppError({\n      name: ERROR_TYPE.CLI_ERROR,\n      message: 'Error occured when reading config.json, did you run `condohub config init` first?',\n      stack: error instanceof Error ? error.stack : undefined,\n    });\n  }\n\n  return userConfigExists;\n}\n\nexport function getUserConfig(config: Config): UserConfig | undefined {\n  let userConfigExists: boolean;\n  let userConfig: UserConfig;\n  try {\n    userConfigExists = getUserConfigExists(config);\n  } catch (error) {\n    throw new AppError({\n      name: ERROR_TYPE.CLI_ERROR,\n      message: 'Error occured when reading config.json, did you run `condohub config init` first?',\n      stack: error instanceof Error ? error.stack : undefined,\n    });\n  }\n\n  if (!userConfigExists) {\n    return undefined;\n  }\n\n  try {\n    const userConfigFile = fs.readFileSync(path.join(config.configDir, 'config.json'));\n    userConfig = JSON.parse(userConfigFile.toString());\n  } catch (error) {\n    throw new AppError({\n      name: ERROR_TYPE.CLI_ERROR,\n      message: 'Error occured when reading config.json, did you run `condohub config init` first?',\n      stack: error instanceof Error ? error.stack : undefined,\n    });\n  }\n\n  return userConfig;\n}\n\nexport async function createUserConfig(config: Config, userConfig?: UserConfig) {\n  try {\n    await fsp.mkdir(path.join(config.configDir), {\n      recursive: true,\n    });\n    await fsp.writeFile(\n      path.join(config.configDir, 'config.json'),\n      JSON.stringify(defaultUserConfig, null, 2)\n    );\n    return defaultUserConfig as UserConfig;\n  } catch (error) {\n    throw new AppError({\n      name: ERROR_TYPE.CLI_ERROR,\n      message: `Error occured while creating the initial user config.json: ${\n        error instanceof Error ? error.message : ''\n      }`,\n      stack: error instanceof Error ? error.stack : undefined,\n    });\n  }\n}\n\nexport async function updateUserConfig(config: Config, userConfig?: UserConfig) {\n  try {\n    const userConfigFile = await fsp.readFile(path.join(config.configDir, 'config.json'));\n    const currentUserConfig = JSON.parse(userConfigFile.toString());\n    const updatedUserConfig: UserConfig = {\n      ...defaultUserConfig,\n      ...currentUserConfig,\n      ...userConfig,\n      cliVersion: config.version,\n      lastUpdatedAt: new Date().toISOString(),\n    };\n    await fsp.writeFile(\n      path.join(config.configDir, 'config.json'),\n      JSON.stringify(updatedUserConfig, null, 2)\n    );\n    return currentUserConfig as UserConfig;\n  } catch (error) {\n    throw new AppError({\n      name: ERROR_TYPE.CLI_ERROR,\n      message: 'Error occured when updating config.json',\n      stack: error instanceof Error ? error.stack : undefined,\n    });\n  }\n}\n\nexport async function deleteUserConfig(config: Config) {\n  try {\n    await fsp.rm(path.join(config.configDir, 'config.json'));\n  } catch (error) {\n    throw new AppError({\n      name: ERROR_TYPE.CLI_ERROR,\n      message: 'Error occured when deleting config.json',\n      stack: error instanceof Error ? error.stack : undefined,\n    });\n  }\n}\n"],"names":["getUserConfigExists","getUserConfig","createUserConfig","updateUserConfig","deleteUserConfig","config","userConfigExists","fs","existsSync","path","join","configDir","error","AppError","name","ERROR_TYPE","CLI_ERROR","message","stack","Error","undefined","userConfig","userConfigFile","readFileSync","JSON","parse","toString","fsp","mkdir","recursive","writeFile","stringify","defaultUserConfig","readFile","currentUserConfig","updatedUserConfig","cliVersion","version","lastUpdatedAt","Date","toISOString","rm"],"mappings":"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"}