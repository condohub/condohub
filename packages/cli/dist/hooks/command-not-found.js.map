{"version":3,"sources":["../../src/hooks/command-not-found.ts"],"sourcesContent":["import { Hook, toConfiguredId, toStandardizedId } from '@oclif/core';\nimport { prompt } from 'inquirer';\n\nconst hook: Hook.CommandNotFound = async function ({ config, argv }) {\n  this.log(`${argv} was not found`);\n  const { command } = await prompt<{ command: string }>([\n    {\n      name: 'command',\n      type: 'list',\n      message: 'Which of these commands would you like to run?',\n      choices: config.commands.map((p) => toConfiguredId(p.id, config)),\n    },\n  ]);\n\n  if (argv?.includes('--help') || argv?.includes('-h')) {\n    return config.runCommand('help', [toStandardizedId(command, config)]);\n  }\n\n  return config.runCommand(toStandardizedId(command, config), argv);\n};\n\nexport default hook;\n"],"names":["hook","config","argv","log","command","prompt","name","type","message","choices","commands","map","p","toConfiguredId","id","includes","runCommand","toStandardizedId"],"mappings":"AAAA;;;;;AAAuD,IAAA,KAAa,WAAb,aAAa,CAAA;AAC7C,IAAA,SAAU,WAAV,UAAU,CAAA;AAEjC,MAAMA,IAAI,GAAyB,eAAgB,EAAEC,MAAM,CAAA,EAAEC,IAAI,CAAA,EAAE,EAAE;IACnE,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;IAClC,MAAM,EAAEE,OAAO,CAAA,EAAE,GAAG,MAAMC,CAAAA,GAAAA,SAAM,AAO9B,CAAA,OAP8B,CAAsB;QACpD;YACEC,IAAI,EAAE,SAAS;YACfC,IAAI,EAAE,MAAM;YACZC,OAAO,EAAE,gDAAgD;YACzDC,OAAO,EAAER,MAAM,CAACS,QAAQ,CAACC,GAAG,CAAC,CAACC,CAAC,GAAKC,CAAAA,GAAAA,KAAc,AAAc,CAAA,eAAd,CAACD,CAAC,CAACE,EAAE,EAAEb,MAAM,CAAC,CAAC;SAClE;KACF,CAAC,AAAC;IAEH,IAAIC,CAAAA,IAAI,aAAJA,IAAI,WAAU,GAAdA,KAAAA,CAAc,GAAdA,IAAI,CAAEa,QAAQ,CAAC,QAAQ,CAAC,MAAIb,IAAI,aAAJA,IAAI,WAAU,GAAdA,KAAAA,CAAc,GAAdA,IAAI,CAAEa,QAAQ,CAAC,IAAI,CAAC,CAAA,EAAE;QACpD,OAAOd,MAAM,CAACe,UAAU,CAAC,MAAM,EAAE;YAACC,CAAAA,GAAAA,KAAgB,AAAiB,CAAA,iBAAjB,CAACb,OAAO,EAAEH,MAAM,CAAC;SAAC,CAAC,CAAC;KACvE;IAED,OAAOA,MAAM,CAACe,UAAU,CAACC,CAAAA,GAAAA,KAAgB,AAAiB,CAAA,iBAAjB,CAACb,OAAO,EAAEH,MAAM,CAAC,EAAEC,IAAI,CAAC,CAAC;CACnE,AAAC;eAEaF,IAAI"}